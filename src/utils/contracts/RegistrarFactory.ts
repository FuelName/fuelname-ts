/* Autogenerated file. Do not edit manually. */

/* eslint-disable max-classes-per-file */
/* eslint-disable @typescript-eslint/no-unused-vars */
/* eslint-disable @typescript-eslint/consistent-type-imports */

/*
  Fuels version: 0.96.1
*/

import { Contract, ContractFactory, decompressBytecode } from "fuels";
import type { Provider, Account, DeployContractOptions, DeployContractResult } from "fuels";

import { Registrar } from "./Registrar";

const bytecode = decompressBytecode("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");

export class RegistrarFactory extends ContractFactory {

  static readonly bytecode = bytecode;

  constructor(accountOrProvider: Account | Provider) {
    super(bytecode, Registrar.abi, accountOrProvider);
  }

  override deploy<TContract extends Contract = Contract>(
    deployOptions?: DeployContractOptions
  ): Promise<DeployContractResult<TContract>> {
    return super.deploy({
      storageSlots: Registrar.storageSlots,
      ...deployOptions,
    });
  }

  static async deploy (
    wallet: Account,
    options: DeployContractOptions = {}
  ): Promise<DeployContractResult<Registrar>> {
    const factory = new RegistrarFactory(wallet);
    return factory.deploy(options);
  }
}
