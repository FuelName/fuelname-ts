/* Autogenerated file. Do not edit manually. */

/* tslint:disable */
/* eslint-disable */

/*
  Fuels version: 0.90.0
  Forc version: 0.60.0
  Fuel-Core version: 0.30.0
*/

import type {
  BytesLike,
  Contract,
  DecodedValue,
  FunctionFragment,
  Interface,
  InvokeFunction,
} from 'fuels';

import type { Option, Enum } from "./common";

export enum ExpirationErrorInput { ExpiredDomain = 'ExpiredDomain' };
export enum ExpirationErrorOutput { ExpiredDomain = 'ExpiredDomain' };
export type IdentityInput = Enum<{ Address: AddressInput, ContractId: ContractIdInput }>;
export type IdentityOutput = Enum<{ Address: AddressOutput, ContractId: ContractIdOutput }>;
export enum OwnershipErrorInput { NotDomainOwner = 'NotDomainOwner' };
export enum OwnershipErrorOutput { NotDomainOwner = 'NotDomainOwner' };
export enum ResolveErrorInput { OwnerAndResolutionMismatch = 'OwnerAndResolutionMismatch', CannotSetPrimaryForUnknownAddress = 'CannotSetPrimaryForUnknownAddress' };
export enum ResolveErrorOutput { OwnerAndResolutionMismatch = 'OwnerAndResolutionMismatch', CannotSetPrimaryForUnknownAddress = 'CannotSetPrimaryForUnknownAddress' };

export type AddressInput = { bits: string };
export type AddressOutput = AddressInput;
export type AssetIdInput = { bits: string };
export type AssetIdOutput = AssetIdInput;
export type ContractIdInput = { bits: string };
export type ContractIdOutput = ContractIdInput;

export type ResolverAbiConfigurables = {
  REGISTRY_CONTRACT_ID: ContractIdInput;
};

interface ResolverAbiInterface extends Interface {
  functions: {
    resolve: FunctionFragment;
    reverse_resolve: FunctionFragment;
    set: FunctionFragment;
    set_primary: FunctionFragment;
  };
}

export class ResolverAbi extends Contract {
  interface: ResolverAbiInterface;
  functions: {
    resolve: InvokeFunction<[asset: AssetIdInput], Option<IdentityOutput>>;
    reverse_resolve: InvokeFunction<[identity: IdentityInput], Option<AssetIdOutput>>;
    set: InvokeFunction<[asset: AssetIdInput, resolve_to: Option<IdentityInput>], void>;
    set_primary: InvokeFunction<[asset: AssetIdInput], void>;
  };
}
